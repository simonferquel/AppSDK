// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Docker.AppSDK {

  /// <summary>Holder for reflection information generated from frontend.proto</summary>
  public static partial class FrontendReflection {

    #region Descriptor
    /// <summary>File descriptor for frontend.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrontendReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5mcm9udGVuZC5wcm90bxINRG9ja2VyLkFwcFNESyJfCgtFeHBvc2VkUG9y",
            "dBIVCg1Db250YWluZXJQb3J0GAEgASgFEhIKClB1YmxpY1BvcnQYAiABKAUS",
            "JQoES2luZBgDIAEoDjIXLkRvY2tlci5BcHBTREsuUG9ydEtpbmQi9wEKB1Nl",
            "cnZpY2USDAoETmFtZRgBIAEoCRINCgVJbWFnZRgCIAEoCRIPCgdDb21tYW5k",
            "GAMgAygJEiwKA0VudhgEIAMoCzIfLkRvY2tlci5BcHBTREsuU2VydmljZS5F",
            "bnZFbnRyeRI5ChBTY2FsYWJpbGl0eU1vZGVsGAUgASgOMh8uRG9ja2VyLkFw",
            "cFNESy5TY2FsYWJpbGl0eU1vZGVsEikKBVBvcnRzGAYgAygLMhouRG9ja2Vy",
            "LkFwcFNESy5FeHBvc2VkUG9ydBoqCghFbnZFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIi8KA0FwcBIoCghTZXJ2aWNlcxgBIAMoCzIW",
            "LkRvY2tlci5BcHBTREsuU2VydmljZSLbAQoHQXBwTWV0YRINCgVOYW1lcxgB",
            "IAMoCRIPCgdWZXJzaW9uGAIgASgJEg4KBkF1dGhvchgDIAEoCRI+CgxEZXBl",
            "bmRlbmNpZXMYBCADKAsyKC5Eb2NrZXIuQXBwU0RLLkFwcE1ldGEuRGVwZW5k",
            "ZW5jaWVzRW50cnkSEwoLRGVzY3JpcHRpb24YBSABKAkaSwoRRGVwZW5kZW5j",
            "aWVzRW50cnkSCwoDa2V5GAEgASgJEiUKBXZhbHVlGAIgASgLMhYuRG9ja2Vy",
            "LkFwcFNESy5BcHBNZXRhOgI4ASIdCg1TdHJpbmdNZXNzYWdlEgwKBERhdGEY",
            "ASABKAkiNwoPTGlzdEFwcFJlc3BvbnNlEiQKBEFwcHMYASADKAsyFi5Eb2Nr",
            "ZXIuQXBwU0RLLkFwcE1ldGEiOQoQUmVuZGVyQXBwUmVxdWVzdBIMCgROYW1l",
            "GAEgASgJEhcKD1BhcmFtZXRlclZhbHVlcxgCIAEoCSo7ChBTY2FsYWJpbGl0",
            "eU1vZGVsEgwKCFNjYWxhYmxlEAASDQoJU2luZ2xldG9uEAESCgoGR2xvYmFs",
            "EAIqNwoIUG9ydEtpbmQSDwoLVW5zcGVjaWZpZWQQABIHCgNUQ1AQARIHCgNV",
            "RFAQAhIICgRCb3RoEAMyrwIKC0FwcEZyb250ZW5kEkgKCExpc3RBcHBzEhwu",
            "RG9ja2VyLkFwcFNESy5TdHJpbmdNZXNzYWdlGh4uRG9ja2VyLkFwcFNESy5M",
            "aXN0QXBwUmVzcG9uc2USPgoGR2V0QXBwEhwuRG9ja2VyLkFwcFNESy5TdHJp",
            "bmdNZXNzYWdlGhYuRG9ja2VyLkFwcFNESy5BcHBNZXRhElQKFkdldEFwcFNl",
            "dHRpbmdzVGVtcGxhdGUSHC5Eb2NrZXIuQXBwU0RLLlN0cmluZ01lc3NhZ2Ua",
            "HC5Eb2NrZXIuQXBwU0RLLlN0cmluZ01lc3NhZ2USQAoJUmVuZGVyQXBwEh8u",
            "RG9ja2VyLkFwcFNESy5SZW5kZXJBcHBSZXF1ZXN0GhIuRG9ja2VyLkFwcFNE",
            "Sy5BcHBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Docker.AppSDK.ScalabilityModel), typeof(global::Docker.AppSDK.PortKind), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.ExposedPort), global::Docker.AppSDK.ExposedPort.Parser, new[]{ "ContainerPort", "PublicPort", "Kind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.Service), global::Docker.AppSDK.Service.Parser, new[]{ "Name", "Image", "Command", "Env", "ScalabilityModel", "Ports" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.App), global::Docker.AppSDK.App.Parser, new[]{ "Services" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.AppMeta), global::Docker.AppSDK.AppMeta.Parser, new[]{ "Names", "Version", "Author", "Dependencies", "Description" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.StringMessage), global::Docker.AppSDK.StringMessage.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.ListAppResponse), global::Docker.AppSDK.ListAppResponse.Parser, new[]{ "Apps" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Docker.AppSDK.RenderAppRequest), global::Docker.AppSDK.RenderAppRequest.Parser, new[]{ "Name", "ParameterValues" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ScalabilityModel {
    [pbr::OriginalName("Scalable")] Scalable = 0,
    [pbr::OriginalName("Singleton")] Singleton = 1,
    [pbr::OriginalName("Global")] Global = 2,
  }

  public enum PortKind {
    [pbr::OriginalName("Unspecified")] Unspecified = 0,
    [pbr::OriginalName("TCP")] Tcp = 1,
    [pbr::OriginalName("UDP")] Udp = 2,
    [pbr::OriginalName("Both")] Both = 3,
  }

  #endregion

  #region Messages
  public sealed partial class ExposedPort : pb::IMessage<ExposedPort> {
    private static readonly pb::MessageParser<ExposedPort> _parser = new pb::MessageParser<ExposedPort>(() => new ExposedPort());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExposedPort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExposedPort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExposedPort(ExposedPort other) : this() {
      containerPort_ = other.containerPort_;
      publicPort_ = other.publicPort_;
      kind_ = other.kind_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExposedPort Clone() {
      return new ExposedPort(this);
    }

    /// <summary>Field number for the "ContainerPort" field.</summary>
    public const int ContainerPortFieldNumber = 1;
    private int containerPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContainerPort {
      get { return containerPort_; }
      set {
        containerPort_ = value;
      }
    }

    /// <summary>Field number for the "PublicPort" field.</summary>
    public const int PublicPortFieldNumber = 2;
    private int publicPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PublicPort {
      get { return publicPort_; }
      set {
        publicPort_ = value;
      }
    }

    /// <summary>Field number for the "Kind" field.</summary>
    public const int KindFieldNumber = 3;
    private global::Docker.AppSDK.PortKind kind_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Docker.AppSDK.PortKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExposedPort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExposedPort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerPort != other.ContainerPort) return false;
      if (PublicPort != other.PublicPort) return false;
      if (Kind != other.Kind) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerPort != 0) hash ^= ContainerPort.GetHashCode();
      if (PublicPort != 0) hash ^= PublicPort.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContainerPort != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ContainerPort);
      }
      if (PublicPort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PublicPort);
      }
      if (Kind != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Kind);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContainerPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContainerPort);
      }
      if (PublicPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PublicPort);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExposedPort other) {
      if (other == null) {
        return;
      }
      if (other.ContainerPort != 0) {
        ContainerPort = other.ContainerPort;
      }
      if (other.PublicPort != 0) {
        PublicPort = other.PublicPort;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ContainerPort = input.ReadInt32();
            break;
          }
          case 16: {
            PublicPort = input.ReadInt32();
            break;
          }
          case 24: {
            kind_ = (global::Docker.AppSDK.PortKind) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Service : pb::IMessage<Service> {
    private static readonly pb::MessageParser<Service> _parser = new pb::MessageParser<Service>(() => new Service());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Service> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service(Service other) : this() {
      name_ = other.name_;
      image_ = other.image_;
      command_ = other.command_.Clone();
      env_ = other.env_.Clone();
      scalabilityModel_ = other.scalabilityModel_;
      ports_ = other.ports_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service Clone() {
      return new Service(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Image" field.</summary>
    public const int ImageFieldNumber = 2;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Command" field.</summary>
    public const int CommandFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_command_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> command_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Command {
      get { return command_; }
    }

    /// <summary>Field number for the "Env" field.</summary>
    public const int EnvFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_env_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> env_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "ScalabilityModel" field.</summary>
    public const int ScalabilityModelFieldNumber = 5;
    private global::Docker.AppSDK.ScalabilityModel scalabilityModel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Docker.AppSDK.ScalabilityModel ScalabilityModel {
      get { return scalabilityModel_; }
      set {
        scalabilityModel_ = value;
      }
    }

    /// <summary>Field number for the "Ports" field.</summary>
    public const int PortsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Docker.AppSDK.ExposedPort> _repeated_ports_codec
        = pb::FieldCodec.ForMessage(50, global::Docker.AppSDK.ExposedPort.Parser);
    private readonly pbc::RepeatedField<global::Docker.AppSDK.ExposedPort> ports_ = new pbc::RepeatedField<global::Docker.AppSDK.ExposedPort>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Docker.AppSDK.ExposedPort> Ports {
      get { return ports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Service);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Service other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Image != other.Image) return false;
      if(!command_.Equals(other.command_)) return false;
      if (!Env.Equals(other.Env)) return false;
      if (ScalabilityModel != other.ScalabilityModel) return false;
      if(!ports_.Equals(other.ports_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      hash ^= command_.GetHashCode();
      hash ^= Env.GetHashCode();
      if (ScalabilityModel != 0) hash ^= ScalabilityModel.GetHashCode();
      hash ^= ports_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Image);
      }
      command_.WriteTo(output, _repeated_command_codec);
      env_.WriteTo(output, _map_env_codec);
      if (ScalabilityModel != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ScalabilityModel);
      }
      ports_.WriteTo(output, _repeated_ports_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      size += command_.CalculateSize(_repeated_command_codec);
      size += env_.CalculateSize(_map_env_codec);
      if (ScalabilityModel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScalabilityModel);
      }
      size += ports_.CalculateSize(_repeated_ports_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Service other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      command_.Add(other.command_);
      env_.Add(other.env_);
      if (other.ScalabilityModel != 0) {
        ScalabilityModel = other.ScalabilityModel;
      }
      ports_.Add(other.ports_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Image = input.ReadString();
            break;
          }
          case 26: {
            command_.AddEntriesFrom(input, _repeated_command_codec);
            break;
          }
          case 34: {
            env_.AddEntriesFrom(input, _map_env_codec);
            break;
          }
          case 40: {
            scalabilityModel_ = (global::Docker.AppSDK.ScalabilityModel) input.ReadEnum();
            break;
          }
          case 50: {
            ports_.AddEntriesFrom(input, _repeated_ports_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class App : pb::IMessage<App> {
    private static readonly pb::MessageParser<App> _parser = new pb::MessageParser<App>(() => new App());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<App> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App(App other) : this() {
      services_ = other.services_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public App Clone() {
      return new App(this);
    }

    /// <summary>Field number for the "Services" field.</summary>
    public const int ServicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Docker.AppSDK.Service> _repeated_services_codec
        = pb::FieldCodec.ForMessage(10, global::Docker.AppSDK.Service.Parser);
    private readonly pbc::RepeatedField<global::Docker.AppSDK.Service> services_ = new pbc::RepeatedField<global::Docker.AppSDK.Service>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Docker.AppSDK.Service> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as App);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(App other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(App other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppMeta : pb::IMessage<AppMeta> {
    private static readonly pb::MessageParser<AppMeta> _parser = new pb::MessageParser<AppMeta>(() => new AppMeta());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMeta(AppMeta other) : this() {
      names_ = other.names_.Clone();
      version_ = other.version_;
      author_ = other.author_;
      dependencies_ = other.dependencies_.Clone();
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMeta Clone() {
      return new AppMeta(this);
    }

    /// <summary>Field number for the "Names" field.</summary>
    public const int NamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Author" field.</summary>
    public const int AuthorFieldNumber = 3;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Dependencies" field.</summary>
    public const int DependenciesFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Docker.AppSDK.AppMeta>.Codec _map_dependencies_codec
        = new pbc::MapField<string, global::Docker.AppSDK.AppMeta>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Docker.AppSDK.AppMeta.Parser), 34);
    private readonly pbc::MapField<string, global::Docker.AppSDK.AppMeta> dependencies_ = new pbc::MapField<string, global::Docker.AppSDK.AppMeta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Docker.AppSDK.AppMeta> Dependencies {
      get { return dependencies_; }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!names_.Equals(other.names_)) return false;
      if (Version != other.Version) return false;
      if (Author != other.Author) return false;
      if (!Dependencies.Equals(other.Dependencies)) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= names_.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      hash ^= Dependencies.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      names_.WriteTo(output, _repeated_names_codec);
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Author);
      }
      dependencies_.WriteTo(output, _map_dependencies_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += names_.CalculateSize(_repeated_names_codec);
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      size += dependencies_.CalculateSize(_map_dependencies_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppMeta other) {
      if (other == null) {
        return;
      }
      names_.Add(other.names_);
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      dependencies_.Add(other.dependencies_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Author = input.ReadString();
            break;
          }
          case 34: {
            dependencies_.AddEntriesFrom(input, _map_dependencies_codec);
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringMessage : pb::IMessage<StringMessage> {
    private static readonly pb::MessageParser<StringMessage> _parser = new pb::MessageParser<StringMessage>(() => new StringMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMessage(StringMessage other) : this() {
      data_ = other.data_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMessage Clone() {
      return new StringMessage(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringMessage other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAppResponse : pb::IMessage<ListAppResponse> {
    private static readonly pb::MessageParser<ListAppResponse> _parser = new pb::MessageParser<ListAppResponse>(() => new ListAppResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAppResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppResponse(ListAppResponse other) : this() {
      apps_ = other.apps_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppResponse Clone() {
      return new ListAppResponse(this);
    }

    /// <summary>Field number for the "Apps" field.</summary>
    public const int AppsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Docker.AppSDK.AppMeta> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(10, global::Docker.AppSDK.AppMeta.Parser);
    private readonly pbc::RepeatedField<global::Docker.AppSDK.AppMeta> apps_ = new pbc::RepeatedField<global::Docker.AppSDK.AppMeta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Docker.AppSDK.AppMeta> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAppResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAppResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!apps_.Equals(other.apps_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= apps_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      apps_.WriteTo(output, _repeated_apps_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += apps_.CalculateSize(_repeated_apps_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAppResponse other) {
      if (other == null) {
        return;
      }
      apps_.Add(other.apps_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RenderAppRequest : pb::IMessage<RenderAppRequest> {
    private static readonly pb::MessageParser<RenderAppRequest> _parser = new pb::MessageParser<RenderAppRequest>(() => new RenderAppRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RenderAppRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Docker.AppSDK.FrontendReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderAppRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderAppRequest(RenderAppRequest other) : this() {
      name_ = other.name_;
      parameterValues_ = other.parameterValues_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenderAppRequest Clone() {
      return new RenderAppRequest(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParameterValues" field.</summary>
    public const int ParameterValuesFieldNumber = 2;
    private string parameterValues_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterValues {
      get { return parameterValues_; }
      set {
        parameterValues_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RenderAppRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RenderAppRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ParameterValues != other.ParameterValues) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ParameterValues.Length != 0) hash ^= ParameterValues.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ParameterValues.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParameterValues);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ParameterValues.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterValues);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RenderAppRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ParameterValues.Length != 0) {
        ParameterValues = other.ParameterValues;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ParameterValues = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
